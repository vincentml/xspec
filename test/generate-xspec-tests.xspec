<?xml version="1.0" encoding="UTF-8"?>
<!-- ===================================================================== -->
<!--  File:       test/generate-xspec-tests.xspec                          -->
<!--  Author:     Florent Georges                                          -->
<!--  Tags:                                                                -->
<!--    Copyright (c) 2010 Jeni Tennsion (see end of file.)                -->
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<t:description xmlns:t="http://www.jenitennison.com/xslt/xspec" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" stylesheet="../src/compiler/generate-xspec-tests.xsl">
  <!--
       Test the source file generate-xspec-tests.xsl.
   -->
  <t:scenario label="test:deep-equal($seq1, $seq2)">
    <!--
    <t:scenario label="FIRST TEST.......">
      <t:variable name="ctxt" as="document-node()">
        <t:description>
          <t:scenario/>
        </t:description>
      </t:variable>
      <t:apply select="$ctxt"/>
      <t:expect label="the result" test="$t:result instance of document-node()"/>
    </t:scenario>
    -->
    <t:scenario label="FIRST TEST.......">
      <t:context mode="t:compile">
        <t:scenario label="my label"/>
      </t:context>
      <t:expect label="is a template" test="$t:result instance of element(xsl:template)"/>
      <!-- test also it is a QName in the namespace x:* -->
      <t:expect label="the name" test="exists($t:result/@name)"/>
      <t:expect label="the name is a QName" test="              namespace-uri-from-QName(resolve-QName($t:result/@name, $t:result))                eq 'http://www.jenitennison.com/xslt/xspec'"/>
      <t:expect label="the label message" test="$t:result/xsl:message eq 'my label'"/>
      <t:expect label="the scenario" test="exists($t:result/t:scenario)"/>
      <t:expect label="the scenario label" test="$t:result/t:scenario/t:label eq 'my label'"/>
    </t:scenario>
  </t:scenario>
  
  <t:scenario label="schematron-location-compare" xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
    
    <t:scenario label="expand xpath2 svrl">
      <t:scenario label="replace namespace uri with prefix (e.g. 2 namespaces 4 elements)">
        <t:call function="t:schematron-location-expand-xpath2">
          <t:param name="location" select="failed-assert/@location">
            <failed-assert location="/root[1]/*:sec[namespace-uri()='http://example.com/ns1'][2]/*:para[namespace-uri()='http://example.com/ns2'][2]/*:para[namespace-uri()='http://example.com/ns2'][3]"/>
          </t:param>
          <t:param name="namespaces">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
          </t:param>
        </t:call>
        <t:expect label="namespace prefixes applied" select="'/root[1]/ex1:sec[2]/ex2:para[2]/ex2:para[3]'"/>
      </t:scenario>
    </t:scenario>
    
    <t:scenario label="expand xpath1 svrl">
      <t:scenario label="remove wildcard namespace (e.g. 3 elements)">
        <t:call function="t:schematron-location-expand-xpath1">
          <t:param name="location" select="successful-report/@location">
            <successful-report location="/root/*[local-name()='sec'][2]/*[local-name()='para'][2]"/>
          </t:param>
        </t:call>
        <t:expect label="namespace wildcard removed" select="'/root/sec[2]/para[2]'"/>
      </t:scenario>
    </t:scenario>
    
    <t:scenario label="expand xpath1 expect">
      <t:scenario label="if no xpath1 style namespace in path return same">
        <t:call function="t:schematron-location-expand-xpath1-expect">
          <t:param name="expect-location">/ex1:section</t:param>
          <t:param name="svrl-location">/section[1]</t:param>
          <t:param name="namespaces">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
          </t:param>
        </t:call>
        <t:expect label="same" select="'/ex1:section'"/>
      </t:scenario>
      <t:scenario label="if xpath1 style namespace in path remove prefixes">
        <t:call function="t:schematron-location-expand-xpath1-expect">
          <t:param name="expect-location">/root/ex1:sec/ex1:sec/ex2:para</t:param>
          <t:param name="svrl-location">/root/*[local-name()='sec'][2]/*[local-name()='sec'][2]/*[local-name()='para'][2]</t:param>
          <t:param name="namespaces">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
          </t:param>
        </t:call>
        <t:expect label="namespace prefixes removed" select="'/root/sec/sec/para'"/>
      </t:scenario>
    </t:scenario>
    
    <t:scenario label="expand attributes">
      <t:call function="t:schematron-location-expand-attributes">
        <t:param name="location">@*[namespace-uri()='http://example.com/ns2' and local-name()='type']</t:param>
        <t:param name="namespaces">
          <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
          <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
        </t:param>
      </t:call>
      <t:expect label="namespace prefix applied" select="'@ex2:type'"/>
    </t:scenario>
    
    <t:scenario label="compare">
      
      <t:scenario label="match exact">
        <t:call function="t:schematron-location-compare">
          <t:param name="expect-location">/article[1]/section[2]</t:param>
          <t:param name="svrl-location">/article[1]/section[2]</t:param>
          <t:param name="namespaces"/>
        </t:call>
        <t:expect label="true" select="true()"/>
      </t:scenario>
      
      <t:scenario label="match ignoring [1]">
        <t:call function="t:schematron-location-compare">
          <t:param name="expect-location">/article/section[2]</t:param>
          <t:param name="svrl-location">/article[1]/section[2]</t:param>
          <t:param name="namespaces"/>
        </t:call>
        <t:expect label="true" select="true()"/>
      </t:scenario>
      
      <t:scenario label="match ignoring leading /">
        <t:call function="t:schematron-location-compare">
          <t:param name="expect-location">article[1]/section[2]</t:param>
          <t:param name="svrl-location">/article[1]/section[2]</t:param>
          <t:param name="namespaces"/>
        </t:call>
        <t:expect label="true" select="true()"/>
      </t:scenario>
      
      <t:scenario label="match with namespaces xpath1">
        <t:call function="t:schematron-location-compare">
          <t:param name="expect-location">/root/ex1:sec[2]/ex2:para[2]</t:param>
          <t:param name="svrl-location">/root/*[local-name()='sec'][2]/*[local-name()='para'][2]</t:param>
          <t:param name="namespaces">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
          </t:param>
        </t:call>
        <t:expect label="true" select="true()"/>
      </t:scenario>
      
      <t:scenario label="match with namespaces xpath2">
        <t:call function="t:schematron-location-compare">
          <t:param name="expect-location">/root/ex1:sec[2]/ex2:para[2]</t:param>
          <t:param name="svrl-location">/root[1]/*:sec[namespace-uri()='http://example.com/ns1'][2]/*:para[namespace-uri()='http://example.com/ns2'][2]</t:param>
          <t:param name="namespaces">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
          </t:param>
        </t:call>
        <t:expect label="true" select="true()"/>
      </t:scenario>
      
      <t:scenario label="match with attribute (note: outside of oXygen, Schematron does not appear to fire on rules that have an attribute node as context)">
        <t:scenario label="not in namespace">
          <t:call function="t:schematron-location-compare">
            <t:param name="expect-location">/article/section[1]/@type</t:param>
            <t:param name="svrl-location">/article[1]/section[1]/@type</t:param>
            <t:param name="namespaces"/>
          </t:call>
          <t:expect label="true" select="true()"/>
        </t:scenario>
        <t:scenario label="in namespace">
          <t:call function="t:schematron-location-compare">
            <t:param name="expect-location">/ex1:article[1]/ex1:sec[2]/@ex2:type</t:param>
            <t:param name="svrl-location">/*:article[namespace-uri()='http://example.com/ns1'][1]/*:sec[namespace-uri()='http://example.com/ns1'][2]/@*[namespace-uri()='http://example.com/ns2' and local-name()='type']</t:param>
            <t:param name="namespaces">
              <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
              <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
            </t:param>
          </t:call>
          <t:expect label="true" select="true()"/>
        </t:scenario>
      </t:scenario>
      
      <t:scenario label="not match">
        <t:call function="t:schematron-location-compare">
          <t:param name="expect-location">/root/body/div/para</t:param>
          <t:param name="svrl-location">/root[1]/div[1]/para[1]</t:param>
          <t:param name="namespaces"/>
        </t:call>
        <t:expect label="false" select="false()"/>
      </t:scenario>
      
      <t:scenario label="not match with namespaces xpath1">
        <t:call function="t:schematron-location-compare">
          <t:param name="expect-location">/root/ex1:sec[2]/ex2:para</t:param>
          <t:param name="svrl-location">/root/*[local-name()='sec'][2]</t:param>
          <t:param name="namespaces">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
          </t:param>
        </t:call>
        <t:expect label="false" select="false()"/>
      </t:scenario>
      
      <t:scenario label="not match with namespaces xpath2">
        <t:call function="t:schematron-location-compare">
          <t:param name="expect-location">/root/ex1:sec[2]/ex1:sec[1]/ex2:para[2]</t:param>
          <t:param name="svrl-location">/root[1]/*:sec[namespace-uri()='http://example.com/ns1'][2]/*:para[namespace-uri()='http://example.com/ns2'][2]</t:param>
          <t:param name="namespaces">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
          </t:param>
        </t:call>
        <t:expect label="false" select="false()"/>
      </t:scenario>
      
    </t:scenario>
    
  </t:scenario>
</t:description>
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<!-- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS COMMENT.             -->
<!--                                                                       -->
<!-- Copyright (c) 2010 Jeni Tennsion                                      -->
<!--                                                                       -->
<!-- The contents of this file are subject to the MIT License (see the URI -->
<!-- http://www.opensource.org/licenses/mit-license.php for details).      -->
<!--                                                                       -->
<!-- Permission is hereby granted, free of charge, to any person obtaining -->
<!-- a copy of this software and associated documentation files (the       -->
<!-- "Software"), to deal in the Software without restriction, including   -->
<!-- without limitation the rights to use, copy, modify, merge, publish,   -->
<!-- distribute, sublicense, and/or sell copies of the Software, and to    -->
<!-- permit persons to whom the Software is furnished to do so, subject to -->
<!-- the following conditions:                                             -->
<!--                                                                       -->
<!-- The above copyright notice and this permission notice shall be        -->
<!-- included in all copies or substantial portions of the Software.       -->
<!--                                                                       -->
<!-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,       -->
<!-- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF    -->
<!-- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.-->
<!-- IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY  -->
<!-- CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  -->
<!-- TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE     -->
<!-- SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                -->
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
